{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","components/Room/Room.js","const.js"],"names":["_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","getOwnPropertyDescriptors","defineProperties","socket","Room","props","state","rolltime","cmdr_dmgToggle","rolldice","bind","changePlayerValue","submitPlayerValue","addCustomValue","openSocket","window","location","hostname","socketport","console","log","this","pathname","emit","on","data","setState","room","JSON","parse","stringify","index","roomData","player_data","player","playerindex","cmdr_dmg","splice","updateRoom","event","elements","name","attributes","type","placeholder","parseInt","cmdr_dmg_new","map","cmdr_index","id","dmg","custom","nested","subindex","subkey","lifeDifference","life","masterindex","dice","rolling","setTimeout","dicevalues","diceindex","Math","floor","random","sides","roomNum","className","onClick","removePlayer","onSubmit","onChange","step","cmdrIndex","customValue","customIndex","active","Component"],"mappings":"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","file":"static/js/5.182efe83.chunk.js","sourcesContent":["export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","import React, { Component } from 'react';\nimport openSocket from 'socket.io-client';\nimport {socketport} from '../../const';\n\n\nimport './Room.css';\n\nlet socket;\n\n/**\n * Room\n * @constructor\n */\n\nclass Room extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      rolltime: 18,\n      cmdr_dmgToggle: 0\n    };\n\n    this.rolldice = this.rolldice.bind(this)\n    this.changePlayerValue = this.changePlayerValue.bind(this)\n    this.submitPlayerValue = this.submitPlayerValue.bind(this)\n    this.addCustomValue = this.addCustomValue.bind(this)\n\n  }\n\n  componentDidMount(){\n    // console.log(this.props.location,window.location.hostname)\n\n    // let players = this.state.room.roomData.player_data.length;\n    socket = openSocket(`http://${window.location.hostname}:${socketport}`);\n\n    console.log('this.props.location.pathname', this.props.location.pathname)\n\n    socket.emit('roomExists', this.props.location.pathname);\n\n\n    // socket.on('joinedRoom', data => {\n    //   this.setState({room: JSON.parse(data) });\n    //   // console.log(this.state)\n    //   // this.updateRoom(this.state.room);\n    // });\n    // socket.on('userleft', data => {\n    //   console.log('THIS IDS DISCONNECT',data)\n    // });\n\n    socket.on('roomUpdated', data => {\n      this.setState({room: JSON.parse(data)});\n    });\n\n    socket.on('sendConsole', data => {\n      console.log(JSON.parse(data))\n    });\n\n\n\n    // socket.emit('createRoom', this.props.location.pathname, 0);\n\n\n  }\n\n  componentDidUpdate(){\n    console.log('update', this.state.room)\n    // this.updateRoom(this.state.room)\n  }\n\n  updateRoom(room){\n    socket.emit('updateRoom', JSON.stringify(room));\n  }\n  \n\n  removePlayer(index){\n    let room = {...this.state.room}\n    //this isn't working right. match name instead of index\n    room.roomData.player_data.forEach((player, playerindex)=>player.cmdr_dmg.splice(index,1));\n\n    room.roomData.player_data.splice(index,1);\n\n    this.setState({room: room});\n    this.updateRoom(this.state.room);\n  }\n  \n  submitPlayerValue(event){\n    // alert(event)\n    let room = {...this.state.room}\n\n    let key = event.target.elements[0].name;\n    let index = event.target.elements[0].attributes.index.value;\n    let type = event.target.elements[0].type;\n    let value = event.target.elements[0].value;\n    let placeholder = event.target.elements[0].placeholder;\n\n    if(type === 'number'){\n      value = parseInt(value)\n    }\n\n    room.roomData.player_data[index][key] = value;\n    if(key === 'name'){\n\n      // change name for everyone\n\n      room.roomData.player_data.forEach((player,playerindex)=>{\n        \n        let cmdr_dmg_new = player.cmdr_dmg;\n\n        cmdr_dmg_new = cmdr_dmg_new.map((cmdr_dmg, cmdr_index)=>{\n          if(cmdr_dmg.name === placeholder){\n            return {\n              id: cmdr_dmg.id,\n              name: value,\n              dmg: cmdr_dmg.dmg\n  \n            }\n          }else{\n            return cmdr_dmg\n          }\n          \n\n        })\n\n        player.cmdr_dmg = cmdr_dmg_new;\n\n      })\n\n    }\n    this.setState({room: room});\n    this.updateRoom(this.state.room);\n  }\n\n  addCustomValue(event){\n    console.log('fireing')\n    let room = {...this.state.room}\n    // alert('ADDDING')\n    console.log(' ADDING CUSTOM ',room.roomData.player_data[index]);\n\n    let type = event.target.type;\n\n    let index = parseInt(event.target.attributes.index.value);\n    let value = event.target.value;\n\n    // event.preventDefault();\n    let field = {\n      name: 'tester',\n      type: 'field',\n      value: 0\n    }\n\n\n    room.roomData.player_data[index].custom.push(field);\n    \n    console.log(' ADDED CUSTOM ',room.roomData.player_data[index]);\n\n\n    this.setState({room: room});\n    this.updateRoom(this.state.room);\n  }\n\n  // changePlayerValueStatic(event){}\n  changePlayerValue(event){\n\n    let room = {...this.state.room}\n\n    let key = event.target.name\n    let type = event.target.type\n    let nested = event.target.attributes.nested.value;\n\n    let index,\n        value;\n\n    if(type === 'number'){\n      index = parseInt(event.target.attributes.index.value)\n      value = parseInt(event.target.value)\n    }else{\n      index = event.target.attributes.index.value\n      value = event.target.value\n    }\n    console.log('NESTED ', nested, key, index, type, value)\n\n    if(nested > 0){\n      let subindex = parseInt(event.target.attributes.subindex.value)\n      let subkey = event.target.attributes.subkey.value\n\n      if(this.state.cmdr_dmgToggle > 0){\n        var difference = function (a, b) { return a-b; }\n        \n        let lifeDifference = difference(room.roomData.player_data[index][key][subindex].dmg, value)\n        \n        room.roomData.player_data[index].life = room.roomData.player_data[index].life + (lifeDifference);\n        console.log('LIF + CMD DMG', room.roomData.player_data[index] , lifeDifference, room.roomData.player_data[index][key][subindex])\n      }\n      \n      console.log(room.roomData.player_data[index])\n\n      room.roomData.player_data[index][key][subindex][subkey] = value;\n    }else{\n      room.roomData.player_data[index][key] = value;\n    }\n\n    this.setState({room: room});\n    this.updateRoom(this.state.room);\n  }\n\n  rolldice(masterindex){\n\n    let room = {...this.state.room}\n    room.roomData.dice.rolling = true;\n    this.setState({room: room});\n\n    for (let index = 0; index < this.state.rolltime; index++) {\n\n      let delay = (index*2) * index;\n      \n      setTimeout(()=>{\n        room.roomData.dice.dicevalues.forEach((dice,diceindex) => {\n          if(diceindex === masterindex || masterindex ==='all'){\n            dice.value = Math.floor(Math.random() * dice.sides) + 1; \n          }\n        });\n        \n        if(index === this.state.rolltime -1){\n          room.roomData.dice.rolling = false;\n        }\n        this.setState({room: room});\n        this.updateRoom(this.state.room);\n      },delay);\n\n    }\n  }\n  render() {\n    return (\n      <main>\n\n        {/* {this.renderRoom()} */}\n        \n\n        {this.state.room && this.state.room.roomData && (\n          <div>\n            <h1>Room PAGE : {this.state.room.roomNum}</h1>\n\n            <div className=\"row\">\n              <div className=\"col-sm-6\">\n                <div className=\"row\">\n                  <button onClick={()=>this.rolldice('all')}>Re-Roll all dice</button>\n                </div>\n                <div className=\"row\">\n                  {this.state.room.roomData.dice.dicevalues.map((dice, index) =>\n                    <button \n                      key={`dice-${index}`} \n                      className={`dice-${dice.sides}`} \n                      onClick={()=>this.rolldice(index)}\n                    >\n                      {dice.value}\n                    </button>\n                  )}\n                </div>\n              </div>\n              <div className=\"col-sm-6\">\n                <button className={this.state.cmdr_dmgToggle ? 'active' : ''} onClick={()=>this.setState({cmdr_dmgToggle: !this.state.cmdr_dmgToggle})}>Toggle cmdr dmg link</button>\n              </div>\n              \n              <div className=\"row\">\n                {this.state.room.roomData.player_data.map((player, index) =>\n                  <div key={ `${player.name}_${index}` } className={`col-xs-12 col-sm-6 playerCard`}>\n                    <div className={`playerCard-wrapper`}>\n                      <div className={`playerCard-exit`}>\n                        <button onClick={()=>this.removePlayer(index)} >X</button>\n                      </div>\n                      <div className={`playerCard-content`}>\n\n                        <form onSubmit={this.submitPlayerValue}>\n                          <input \n                            type=\"text\" \n                            name=\"name\"\n                            placeholder={player.name}\n                            index={index}\n                            className={`playerCard-name`}\n                          ></input>\n                          <input type=\"submit\" value=\"^\"></input>\n                        </form>\n\n                      \n                        <input \n                          type=\"number\" \n                          name=\"life\"\n                          value={player.life}\n                          index={index}\n                          nested={0}\n                          onChange={this.changePlayerValue}\n                          className={`playerCard-life`}\n                          step={1}\n                        ></input>\n\n                        <div className=\"row playerCard-bigsec\">\n                          {player.cmdr_dmg.map((player, cmdrIndex)=>\n                            <div className=\"col-sm-4 cmdrDmg\" key={`${player.name}_${player.id}_${cmdrIndex}`}>\n                              <span>{player.name}</span>\n\n                              <input \n                                type=\"number\" \n                                name=\"cmdr_dmg\"\n                                subkey=\"dmg\"\n                                value={player.dmg}\n                                index={index}\n                                subindex={cmdrIndex}\n                                onChange={this.changePlayerValue}\n                                nested={1}\n                                className={`cmdrDmg-dmg`}\n                                step={1}\n\n                              ></input>\n\n                            </div>\n                          )}\n                        </div>\n\n                        <div className=\"row\">\n\n                          <form onSubmit={this.addCustomValue}>\n                            test herer\n                            <input \n                              type=\"text\" \n                              placeholder={'new value'}\n                              index={index}\n                              className={`playerCard-custom`}\n                            ></input>\n                            <input type=\"submit\" value=\"^\"></input>\n                          </form>\n\n                        </div>\n                        <div className=\"row playerCard-bigsec\">\n                          {player.custom.map((customValue, customIndex)=>\n                            <div className='col-sm-6' key={`${customValue.name}_${customIndex}`}>\n                              {customValue.type == 'field'&&(\n                                  <div className='row'>\n                                    {customValue.name}\n                                    <input \n                                      type=\"number\" \n                                      name={customValue.name}\n                                      value={customValue.value}\n                                      index={index}\n                                      nested={0}\n                                      // onChange={this.changePlayerValue}\n                                      step={1}\n                                    ></input>\n                                  </div>\n                                  \n                              )}\n                              {customValue.type == 'toggle'&&(\n                                <div className={`customtoggle ${customValue.active}`}>\n                                  {customValue.name}\n                                  <div className={`customtoggle-toggleOn`}></div>\n                                  <div className={`customtoggle-toggleOff`}></div>\n\n                                </div>\n                              )}\n                            </div>\n                          )}\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                )}\n              </div>\n            </div>\n          </div>\n        )}\n        {/* {this.state.room.num} */}\n\n      </main>\n    );\n  }\n}\n\n\n\nexport default Room;\n","export const socketport = '8000';"],"sourceRoot":""}